Materials Needed:
Raspberry Pi 4
RPi Power Supply
Micro-HDMI to HDMI Cable
Ethernet Cable (optional)
Monitor/Keyboard/Mouse
(2) 2-Wire Connectors
Third-party ArduCam Monochrome IR-sensitive Camera

Step 1:
Perform the initial Raspberry Pi Setup (including internet connection)
The following link has a guide:
https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up
After initial boot, ensure the software is up-to-date:
-Open the terminal
-Enter the following commands (requires internet connection)
sudo apt update (May need to be run multiple times to ensure completion)
sudo apt full-upgrade
sudo apt-get install python-pip

Step 2:
Configure the Raspberry Pi for camera use
-Open the desktop menu in the top left
-Go to Preferences > Raspberry Pi configuration
-Open the Interfaces tab
-Enable the Camera option and click OK
-Reboot the Raspberry Pi if prompted (Or shutdown and connect the camera if you haven't already)

Step 3:
For ArduCam third-party cameras: https://www.arducam.com/docs/cameras-for-raspberry-pi/mipi-camera-modules/camera-userland-driver-sdk-and-examples/
-Open the terminal
-Enter the following commands (requires internet connection)
sudo apt-get update && sudo apt-get install libzbar-dev libopencv-dev
sudo apt-get install python-opencv
sudo pip install 4vl2
git clone https://github.com/ArduCAM/MIPI_Camera.git
cd MIPI_Camera/RPI/
make install
chmod +x enable_i2c_vc.sh
./enable_i2c_vc.sh
-Click Y/y to reboot now (only if prompted)
-Enter the following commands
cd MIPI_Camera/RPI/
make clean && make
-If a fatal error for opencv occurs, enter the following command and re-enter the two above
sudo apt-get install libopencv-dev

Step 4:
Import or create python code to run camera tests
-Enter the following commands
For third-party ArduCam cameras:
curl -l https://raw.githubusercontent.com/tmp52468/Haidekker-Lab/master/cf_capture.py > /home/pi/MIPI_Camera/RPI/python/cf_capture.py

Step 5:
Raspberry Pi 3/4 pin schematic: https://pinout.xyz/pinout/pwm
Connect pin 33 and ground to the excitation led relay

Step 6:
Run camera tests
To use ArduCam third-party cameras:
-Enter the following commands
python /home/pi/MIPI_Camera/RPI/python/cf_capture.py

Step 7:
Connect to OneDrive cloud service
The following link has a guide:
https://jarrodstech.net/how-to-raspberry-pi-onedrive-sync/
Once connected, enter the following commands:
cd
mkdir rclone

Step 8:
Set Up Samba/CIFS system for network
Enter the following commands:
cd
mkdir sambaShare

Step 9:
Install ImageJ2/Fiji
Enter the following commands:
sudo apt install imagej
curl -L https://raw.githubusercontent.com/tmp52468/Haidekker-Lab/master/CF_Imaging.ijm > /home/pi/sambaShare/CF_Imaging.ijm

Step 10:
Set up automated image capture and processing
Enter the following command:
curl -L https://raw.githubusercontent.com/tmp52468/Haidekker-Lab/master/auto_cf_imaging.sh > home/pi/sambaShare/auto_cf_imaging.sh

Modify the shell script to fit your cloud layout:
nano home/pi/sambaShare/auto_cf_imaging.sh

Modify the crontab file to enable automatic file execution:
crontab -e

Add scheduled task to the bottom of crontab:
0 0 * * * /home/pi/sambaShare/auto_cf_imaging.sh

For on reboot:
@reboot command_to_mount_Samba_Share
